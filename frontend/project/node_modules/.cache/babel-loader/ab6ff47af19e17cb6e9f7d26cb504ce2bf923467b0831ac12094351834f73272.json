{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      editMode: false,\n      // Set to false initially\n      matchingType: '',\n      matchingTitle: '',\n      matchingContent: '',\n      resultMessage: '',\n      resultMessageColor: '',\n      postDetail: {}\n      // ... (other data properties)\n    };\n  },\n\n  created() {\n    const postID = this.$route.params.postID;\n    axios.get(`http://localhost:3001/api/getPostDetail/${postID}`).then(response => {\n      this.postDetail = response.data;\n    }).catch(error => {\n      console.error('Error fetching post details:', error);\n    });\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },\n  methods: {\n    enableEditMode() {\n      this.editMode = true; // Activate edit mode\n    },\n\n    updateUserInformation() {\n      // ... (your update method)\n    },\n    cancelChanges() {\n      this.editMode = false; // Deactivate edit mode\n      // ... (other cancel logic)\n    },\n\n    async applyMatching() {\n      // 모든 필드가 채워져 있는지 확인\n      if (this.matchingType !== '' && this.matchingTitle.trim() !== '' && this.matchingContent.trim() !== '') {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const userID = user ? user.id : null;\n        const postData = {\n          matchingType: this.matchingType,\n          matchingTitle: this.matchingTitle,\n          matchingContent: this.matchingContent,\n          userID: userID // You might also need to send the userID\n        };\n\n        // Send the post data to the server\n        try {\n          const response = await fetch(\"http://localhost:3001/api/addPost\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postData)\n          });\n          if (response.ok) {\n            const data = await response.json();\n            alert(data.message);\n            this.resultMessage = '신청되었습니다!';\n            this.resultMessageColor = 'green';\n            this.$refs.myForm.reset();\n          } else {\n            const errorData = await response.json();\n            alert(errorData.error);\n            this.resultMessage = '매칭 신청에 실패했습니다.';\n            this.resultMessageColor = 'red';\n          }\n        } catch (error) {\n          console.error(\"오류\", error);\n        }\n      }\n    },\n    cancelMatching() {\n      // 폼 필드를 지우고 결과 메시지 초기화\n      this.matchingType = '';\n      this.matchingTitle = '';\n      this.matchingContent = '';\n      this.resultMessage = '';\n      this.resultMessageColor = ''; // 색상 재설정\n    },\n\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    }\n  }\n};","map":{"version":3,"names":["axios","data","editMode","matchingType","matchingTitle","matchingContent","resultMessage","resultMessageColor","postDetail","created","postID","$route","params","get","then","response","catch","error","console","computed","user","JSON","parse","localStorage","getItem","methods","enableEditMode","updateUserInformation","cancelChanges","applyMatching","trim","userID","id","postData","fetch","method","headers","body","stringify","ok","json","alert","message","$refs","myForm","reset","errorData","cancelMatching","goToMyInfoPage","$router","push","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToLoginPage","goToMainPage","goToNoticePage"],"sources":["/Users/moonjiin/Desktop/MatchingUs/frontend/project/src/views/MatchingChangePage.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- 네비게이션 바 -->\n      <!-- 상단 고정 네비게이션 바 -->\n      <nav class=\"navbar bg-body-tertiary fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar_logo\">\n            <!-- 매칭어스 로고 이미지 -->\n            <span class=\"MatchingUs\">\n              <img @click=\"goToMainPage\"\n                src=\"/image/logo.png\"\n                class=\"img\"\n                alt=\"매칭어스 로고\"\n              />\n            </span>\n          </div>\n          <div class=\"navbar_right\">\n            <div class=\"navbar_welcome\">\n              <!-- 사용자 이름과 환영 메시지 -->\n              <div class=\"welcome\">환영합니다, <strong class=\"name\">{{ user.name }}</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n            </div>\n            <!-- 로그아웃 버튼 -->\n            <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\n              <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\n            </button>\n          </div>\n        </div>\n      </nav>\n  \n      <!-- 사이드 메뉴 바 -->\n      <!-- 좌측 고정 사이드 메뉴 바 -->\n      <nav class=\"menuBar fixed-top\">\n        <div class=\"side_nav\">\n          <ul class=\"basicMenu\">\n            <li>\n              <!-- 내 정보 페이지로 이동 버튼 -->\n              <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\n            </li>\n            <li>\n              <!-- 매칭 신청 페이지로 이동 버튼 -->\n              <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\n            </li>\n            <li>\n              <!-- 매칭 현황 페이지로 이동 버튼 -->\n              <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\n            </li>\n            <li>\n              <!-- 공지사항 페이지로 이동 -->\n              <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      <!-- 매칭 현황 -->\n      <div class=\"match-status\">\n        <!-- 매칭 현황의 내용이 동적으로 표시될 영역 -->\n      </div>\n    </div>\n  \n  \n    <div class=\"content-container\">\n        <div class=\"content matching-form\">\n          <form ref=\"myForm\">\n            <div class=\"form-group\">\n              <div class=\"radio-container\">\n                <!-- 문제점 1: 1-2인 매칭, 3인 이상 텍스트 스타일 변경 -->\n                <label class=\"radio-label\">\n                  <input type=\"radio\" id=\"matching-type-1\" name=\"matchingType\" value=\"1-2인 매칭\" v-model=\"postDetail.matchingType\">\n                  <span class=\"bold-purple\">1-2인 매칭</span>\n                </label>\n                <label class=\"radio-label\">\n                  <input type=\"radio\" id=\"matching-type-2\" name=\"matchingType\" value=\"3인 이상 매칭\" v-model=\"postDetail.matchingType\">\n                  <span class=\"bold-purple\">3인 이상 매칭</span>\n                </label>\n              </div>\n            </div>\n        </form>\n  \n            <div class=\"form-group\">\n              <!-- 문제점 2: 매칭 제목 아래에 textbox 추가 및 위치 조정 -->\n              <label for=\"matchingTitle\" class=\"bold-purple\">매칭 제목</label>\n              <input type=\"text\" id=\"matchingTitle\" v-model=\"postDetail.matchingTitle\" required :disabled=\"!editMode\">\n            </div>\n  \n            <div class=\"form-group\">\n              <!-- 문제점 2: 매칭 내용 아래에 textbox 추가 및 위치 조정 -->\n              <label for=\"matchingContent\" class=\"matching-label\">매칭 내용</label>\n              <textarea id=\"matchingContent\" rows=\"8\" v-model=\"postDetail.matchingContent\" required :disabled=\"!editMode\"></textarea>\n            </div>\n  \n            <div class=\"btn-container\">\n  <button v-if=\"editMode\" type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"updateUserInformation\">\n    저장\n  </button>\n  <button v-if=\"editMode\" type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"cancelChanges\">\n    취소\n  </button>\n  <button v-else type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"enableEditMode\">\n    수정\n  </button>\n</div>\n<p class=\"result-message\" :style=\"{ color: resultMessageColor }\">{{ resultMessage }}</p>\n\n\n          </div>\n        </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      editMode: false, // Set to false initially\n      matchingType: '',\n      matchingTitle: '',\n      matchingContent: '',\n      resultMessage: '',\n      resultMessageColor: '',\n      postDetail: {},\n      // ... (other data properties)\n    };\n  },\n  created() {\n    const postID = this.$route.params.postID;\n    axios.get(`http://localhost:3001/api/getPostDetail/${postID}`)\n    .then(response => {\n        this.postDetail = response.data;\n    })\n    .catch(error => {\n        console.error('Error fetching post details:', error);\n    });\n},\n  computed: {\n      user() {\n        return JSON.parse(localStorage.getItem('user')) || {};\n      }\n    },  \n    methods: {\n    enableEditMode() {\n      this.editMode = true; // Activate edit mode\n    },\n    updateUserInformation() {\n      // ... (your update method)\n    },\n    cancelChanges() {\n      this.editMode = false; // Deactivate edit mode\n      // ... (other cancel logic)\n    },\n      async applyMatching() {\n        // 모든 필드가 채워져 있는지 확인\n        if (\n            this.matchingType !== '' &&\n            this.matchingTitle.trim() !== '' &&\n            this.matchingContent.trim() !== ''\n        ) {\n            \n  const user = JSON.parse(localStorage.getItem('user'));\n  const userID = user ? user.id : null;\n  \n  const postData = {\n                matchingType: this.matchingType,\n                matchingTitle: this.matchingTitle,\n                matchingContent: this.matchingContent,\n                userID: userID  // You might also need to send the userID\n            };\n  \n            // Send the post data to the server\n            try {\n              const response = await fetch(\"http://localhost:3001/api/addPost\", {\n                method: 'POST',\n                headers: { \n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postData)\n            });\n            \n            if (response.ok) {\n              const data = await response.json();\n              alert(data.message);\n              this.resultMessage = '신청되었습니다!';\n              this.resultMessageColor = 'green';\n              this.$refs.myForm.reset();\n              } else {\n                const errorData = await response.json();\n                alert(errorData.error);\n                this.resultMessage = '매칭 신청에 실패했습니다.';\n                this.resultMessageColor = 'red';\n                }\n            } catch (error){\n              console.error(\"오류\", error);\n            }\n        }\n      },\n  \n      cancelMatching() {\n        // 폼 필드를 지우고 결과 메시지 초기화\n        this.matchingType = '';\n        this.matchingTitle = '';\n        this.matchingContent = '';\n        this.resultMessage = '';\n        this.resultMessageColor = ''; // 색상 재설정\n      },\n  \n      // 내 정보 페이지로 이동\n      goToMyInfoPage() {\n        this.$router.push(\"/MyInfoPage\");\n      },\n  \n      // 매칭 신청 페이지로 이동\n      goToMatchingApplyPage() {\n        this.$router.push(\"/MatchingApplyPage\");\n      },\n  \n      // 매칭 현황 페이지로 이동\n      goToMatchingApplyDetailPage() {\n        this.$router.push(\"/MatchingApplyDetailPage\");\n      },\n  \n      // 로그인 페이지로 이동\n      goToLoginPage() {\n        this.$router.push(\"/\");\n      },\n  \n      goToMainPage() {\n        this.$router.push(\"/MainPage\");\n      },\n  \n      goToNoticePage() {\n        this.$router.push(\"/NoticePage\");\n      },\n    }\n  }\n  </script>\n  \n  <style scoped>\n  body {\n      margin: 0;\n      background-color: white;\n      font-family: 'jua', sans-serif;\n  }\n  \n  #matchingContent {\n    font-family: 'jua', sans-serif;\n  }\n  .MatchingUs {\n      font-size: 28px;\n      color: #9370DB;\n      font-family: 'jua', sans-serif;\n  }\n  \n  /* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\n  .img {\n      width: 200px; /* 이미지의 너비를 200px로 조정 */\n      height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\n      margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\n  }\n  \n  \n  .navbar {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background-color: #F6E6F6;\n      padding: 8px 12px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_logo {\n      font-size: 24px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_logo .logo_image {\n      margin-right: 8px; \n  }\n  \n  .navbar_welcome {\n      display: flex;\n      align-items: center;\n      margin-right: 30px; \n      margin-top: 10px;\n      font-weight: 400;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_welcome .welcome {\n      color: #9370DB;\n      margin-bottom: 10px;\n  }\n  \n  .btn.btn-outline-success {\n      /* color: #9370DB; */\n      border-color: #9370DB; \n      font-weight: 500;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_right {\n      display: flex;\n      align-items: center;\n  }\n  \n  .navbar_right .btn {\n      margin-left: auto;\n      background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n  /* Set the border color to match the text color */\n  }\n  \n  .navbar_right .btn a {\n  /* Set the text color of the button */\n      text-decoration: none;\n  }\n  \n  .navbar_right .btn:hover {\n      transform: scale(1.05);\n  }\n  \n  /* 사이드 메뉴 바 */\n  .side_nav {\n      width: 200px;\n      height: 100%;\n      position: fixed;\n      background-color:#cccccc; /* 회색으로 변경 */\n      padding: 20px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .basicMenu button:hover {\n      background-color:#AAAAAA; /* 호버시 진한 회색으로 변경 */\n      font-family: 'jua', sans-serif;\n  }\n  \n  \n  .basicMenu {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n  }\n  \n  .basicMenu button {\n      background: none;\n      border: none;\n      cursor: pointer;\n      padding: 10px;\n      margin-bottom: 10px;\n      width: 100%;\n      text-align: left;\n      color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n      font-size: 16px;\n      transition: background-color 0.3s; /* 호버 효과 추가 */\n  }\n  \n  \n  .menuBar {\n    top: 95px; /* Adjust this value according to your fixed navbar height */\n  }\n  \n  .container {\n    display: flex;\n    justify-content: center;\n  }\n  \n  .content {\n    padding: 30px;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: #fff;\n    width: 500px;\n    margin-left:350px;\n    margin-right: 150px;\n  }\n  \n  .section-title {\n    color: #9370DB;\n    margin-bottom: 20px;\n    font-size: 24px;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .bold-purple {\n    /* 문제점 1: 보라색 굵은 글씨 스타일 */\n    color: #9370db;\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .matching-form {\n    width: 100%;\n    max-width: 600px;\n    margin: 3px auto; /* 폼을 더 아래로 내림 */\n    padding: 20px;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .radio-container {\n    display: flex;\n    align-items: center;\n  }\n  \n  .radio-label {\n    margin-right: 20px;\n  }\n  \n  .matching-label {\n    /* 문제점 2: 매칭 내용 레이블 위치 조정 */\n    float: left;\n    margin-right: 10px;\n    color: #9370db;\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  \n  .btn-container {\n    /* 수정된 스타일 */\n    display: flex;\n    justify-content: flex-end; /* 오른쪽 정렬 */\n    align-items: center;\n    margin-top: 20px;\n  }\n  \n  .apply-btn,\n  .cancel-btn {\n    background-color: #F6E6F6;\n    color: #9370DB;\n    border: 1px solid #9370DB;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    font-family: 'jua', sans-serif;\n  }\n  \n  \n  .result-message {\n    margin-top: 10px;\n    color: #008000; /* Green color for successful message */\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .content-container {\n    display: flex;\n    justify-content: center; /* 수평으로 가운데 정렬 */\n    margin-left: 350px;\n    margin-right: 150px;\n    align-items: flex-start;\n    margin-top: 100px;\n  }\n  \n  textarea {\n    /* 문제점 3: 텍스트 박스 크기 조정 */\n    width: 100%;\n    resize: vertical;\n    border-radius: 10px;\n    border: 1px solid #DDD;\n  }\n  \n  #matchingTitle {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #DDD;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-bottom: 15px;\n    transition: border-color 0.3s;\n    font-family: 'jua', sans-serif;\n  }\n\n  \n  input[type=\"text\"],\n  textarea {\n    /* 문제점 3: 텍스트 박스 크기 조정 */\n    width: 100%;\n    resize: vertical;\n    margin-top: 5px; /* 추가된 코드: 텍스트박스 위 여백 */\n  }\n  \n  .edit-btn-purple {\n    background-color: #F6E6F6;\n  color: #9370DB;\n  border: 1px solid #9370DB;\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-family: 'jua', sans-serif;\n}\n\n  \n  @import \"~bootstrap/dist/css/bootstrap.min.css\";\n  @import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n  \n  @font-face {\n    font-family: 'jua';\n    src:url(../../public/fonts/font.ttf)\n  }\n  \n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}