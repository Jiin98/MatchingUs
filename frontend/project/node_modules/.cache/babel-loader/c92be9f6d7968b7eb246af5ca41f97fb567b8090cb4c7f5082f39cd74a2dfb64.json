{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      isShowingPosts: true,\n      // Add this data property\n      posts: []\n    };\n  },\n  created() {\n    console.log(\"Attempting to fetch posts...\"); // 이 로그를 추가\n    this.fetchPosts();\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },\n  methods: {\n    fetchPosts() {\n      console.log(\"fetchPosts method called\");\n      axios.get('http://localhost:3001/api/getUserPosts', {\n        params: {\n          studentID: this.user.studentID\n        }\n      }).then(response => {\n        console.log(\"API Response:\", response.data);\n        this.posts = response.data;\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n    },\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    goToMatchingApplyDetailMorePage() {\n      this.$router.push(\"/MatchingApplyDetailMorePage\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToMatchingChangePage() {\n      this.$router.push(\"/MatchingChangePage\");\n    },\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    },\n    showPosts() {\n      this.isShowingPosts = true;\n    },\n    showComments() {\n      this.isShowingPosts = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isShowingPosts","posts","created","console","log","fetchPosts","computed","user","JSON","parse","localStorage","getItem","methods","get","params","studentID","then","response","catch","error","goToMyInfoPage","$router","push","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToMatchingApplyDetailMorePage","goToMainPage","goToMatchingChangePage","goToLoginPage","goToNoticePage","showPosts","showComments"],"sources":["/Users/moonjiin/Desktop/MatchingUs/frontend/project/src/views/MatchingApplyDetailPage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 네비게이션 바 -->\n    <!-- 상단 고정 네비게이션 바 -->\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar_logo\">\n          <!-- 매칭어스 로고 이미지 -->\n          <span class=\"MatchingUs\">\n            <img @click=\"goToMainPage\"\n              src=\"/image/logo.png\"\n              class=\"img\"\n              alt=\"매칭어스 로고\"\n            />\n          </span>\n        </div>\n        <div class=\"navbar_right\">\n          <div class=\"navbar_welcome\">\n            <!-- 사용자 이름과 환영 메시지 -->\n            <div class=\"welcome\">환영합니다, <strong class=\"name\">{{ user.name }}</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n          </div>\n          <!-- 로그아웃 버튼 -->\n          <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\n            <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\n          </button>\n        </div>\n      </div>\n    </nav>\n\n\n    <!-- 사이드 메뉴 바 -->\n    <!-- 좌측 고정 사이드 메뉴 바 -->\n    <nav class=\"menuBar fixed-top\">\n      <div class=\"side_nav\">\n        <ul class=\"basicMenu\">\n          <li>\n            <!-- 내 정보 페이지로 이동 버튼 -->\n            <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\n          </li>\n          <li>\n            <!-- 매칭 신청 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\n          </li>\n          <li>\n            <!-- 매칭 현황 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\n          </li>\n          <li>\n                    <!-- 공지사항 페이지로 이동 -->\n                    <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\n                </li>\n        </ul>\n      </div>\n    </nav>\n\n    <!-- 매칭 현황 -->\n    <div class=\"content\">\n      <!-- <div class=\"button01\">\n      <button @click=\"showPosts\">내 게시글</button>\n      <button @click=\"showComments\">내 댓글</button>\n       </div> -->\n            <!-- 매칭을 신청한 사람들이 올려놓은 글들이 포스트잇의 형태로 들어가는 내용 -->\n            <section id=\"postItsContainer\">\n              <div v-for=\"post in posts\" :key=\"post.postID\" @click=\"goToMatchingBoardDetailPage(post.postID)\" class=\"post-it\" :class=\"{ male: post.gender === 'male', female: post.gender === 'female' }\">\n                <h3>{{ post.matchingTitle }}</h3>\n                <p>{{ post.matchingType }}</p>\n                <p>{{ post.department }}</p>\n                <p>{{ post.matchingContent }}</p>\n                \n            </div>\n              <div @click=\"goToMatchingChangePage\" class=\"post-it female\">      \n                <h3> 컴퓨터공학과 남학생 3명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 3명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n            </div>\n         \n\n            <div class=\"post-it female\">\n                <h3>토목공학과 남학생 3명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 3명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n               \n            </div>\n              <div class=\"post-it female\">      \n                <h3>공업디자인전공 3명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 3명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n               \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3>식품공학전공 남학생 2명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 2명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n                \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3>ESFJ 남학생 1명과 미팅을 구합니다!</h3>\n                <p>인원: 1명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n                \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3>경제학과 남학생 5명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 5명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n                \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3>미디어커뮤니케이션학부 학생 4명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 4명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n               \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3>데이터정보과학부 남학생 3명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 3명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n                \n            </div>\n\n  <div class=\"post-it female\">      \n                <h3> 전기공학부 남학생 6명과 친목 과팅을 구합니다!</h3>\n                <p>인원: 6명</p>\n                <p>학과: 공과대학 시스템경영공학부 산업경영공학전공</p>\n            </div>\n\n            </section>\n           \n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      isShowingPosts: true, // Add this data property\n      posts: []\n    };\n  },\n  created() {\n    console.log(\"Attempting to fetch posts...\"); // 이 로그를 추가\n    this.fetchPosts();\n},\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },  \n  methods: {\n    fetchPosts() {\n      console.log(\"fetchPosts method called\");\n      axios.get('http://localhost:3001/api/getUserPosts', { params: { studentID: this.user.studentID } })\n            .then(response => {\n              console.log(\"API Response:\", response.data);  \n                this.posts = response.data;\n            })\n            .catch(error => {\n                console.error('Error fetching posts:', error);\n            });\n    },\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    goToMatchingApplyDetailMorePage() {\n      this.$router.push(\"/MatchingApplyDetailMorePage\");\n    },\n\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n\n    goToMatchingChangePage() {\n      this.$router.push(\"/MatchingChangePage\");\n    },\n\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    \n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    },\n\n    showPosts() {\n      this.isShowingPosts = true;\n    },\n    showComments() {\n      this.isShowingPosts = false;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nbody {\n    margin: 0;\n    background-color: white;\n}\n\n/* .button01 {\n    display: flex;\n    margin-bottom: 100px;\n    margin-left: 150px;\n} */\n\n.MatchingUs {\n    font-size: 28px;\n    color: #9370DB;\n}\n\n/* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\n.img {\n    width: 200px; /* 이미지의 너비를 200px로 조정 */\n    height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\n    margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\n}\n\n\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #F6E6F6;\n    padding: 8px 12px;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_logo {\n    font-size: 24px;\n}\n\n.navbar_logo .logo_image {\n    margin-right: 8px; \n}\n\n.navbar_welcome {\n    display: flex;\n    align-items: center;\n    margin-right: 30px; \n    margin-top: 10px;\n    font-weight: 400;\n}\n\n.navbar_welcome .welcome {\n    color: #9370DB;\n    margin-bottom: 10px;\n}\n\n.btn.btn-outline-success {\n    /* color: #9370DB; */\n    border-color: #9370DB; \n    font-weight: 500;\n}\n\n.navbar_right {\n    display: flex;\n    align-items: center;\n}\n\n.navbar_right .btn {\n    margin-left: auto;\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n/* Set the border color to match the text color */\n}\n\n.navbar_right .btn a {\n/* Set the text color of the button */\n    text-decoration: none;\n}\n\n.navbar_right .btn:hover {\n    transform: scale(1.05);\n}\n\n\n\n/* 사이드 메뉴 바 */\n.side_nav {\n    width: 200px;\n    height: 100%;\n    position: fixed;\n    background-color:#cccccc; /* 회색으로 변경 */\n    padding: 20px;\n    font-family: 'jua', sans-serif;\n}\n\n.basicMenu button:hover {\n    background-color:#AAAAAA; /* 호버시 진한 회색으로 변경 */\n    font-family: 'jua', sans-serif;\n}\n\n\n.basicMenu {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.basicMenu button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n    text-align: left;\n    color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n    font-size: 16px;\n    transition: background-color 0.3s; /* 호버 효과 추가 */\n}\n\n.menuBar {\n  top: 95px; /* Adjust this value according to your fixed navbar height */\n}\n\n.container {\n  display: flex;\n  justify-content: center;\n}\n\n.container02 {\n  display: flex;\n  justify-content: center; /* 수평 중앙 정렬 */\n  align-items: center; /* 수직 중앙 정렬 */\n  height: 10vh; /* 화면 전체 높이 */\n}\n\n/* 버튼 스타일링 (옵션) */\n#btnMyComments {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color:rgb(227, 174, 241);\n  color: white;\n  border: none;\n  border-radius: 5px;\n  margin: 5px;\n}\n\n/* 버튼 스타일링 (옵션) */\n#btnMyPosts {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: rgb(227, 174, 241);\n  color: white;\n  border: none;\n  border-radius: 5px;\n  margin: 5px;\n}\n\n/* 활성 버튼 스타일 */\n.container02 button.active {\n  background-color: #9370db;\n  color: white;\n}\n\n.post-it {\n    width: 300px;\n    height: 250px;\n    box-shadow: 4px 4px 10px #aaa;\n    font-size: 25px;\n}\n\n.post-it:hover {\n    transform: scale(1.08); /* Slightly enlarge the post-it on hover */\n}\n\n.post-it.male {\n    background-color: #deeeff; /* Blue color for male */\n    font-family: 'gangwon', sans-serif;\n}\n\n.post-it.female {\n    background-color: #ffe4ee; /* Pink color for female */\n    font-family: 'gangwon', sans-serif;\n}\n\n#postItsContainer {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  justify-items: center;\n  margin-right: 150px;\n  margin-left: 350px; /* Original margin-left value */\n  margin-top: 150px;\n  transition: margin-left 0.3s; /* Add transition effect for smooth animation */\n}\n\n.container {\n    display: flex;\n    justify-content: center;\n}\n\n.board-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-top: 100px;\n}\n\n.board-list li {\n    background-color: white;\n    border-radius: 10px;\n    padding: 15px;\n    margin-bottom: 15px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    height: 400px;\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    flex: 0 0 calc(50% - 20px);\n}\n\n.board-list .btn {\n    margin-top: auto;\n    background-color: #F6E6F6;\n    color: #9370DB; /* 버튼 텍스트 색상 흰색으로 설정 */\n    border-color: #F6E6F6;\n    width: 100%;\n}\n\n.board-list .btn:hover {\n    transform: scale(1.05); \n}\n\n\n.content {\n  display: flex;\n  flex-direction: column;\n  border: none; /* 테두리 제거 */\n  \n}\n\n\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n\n@font-face {\n  font-family: 'gangwon';\n  src:url(../../public/fonts/강원교육현옥샘.ttf)\n}\n\n  @media screen and (max-width: 768px) {\n\n      #postItsContainer {\n        display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 20px;\n  justify-items: center;\n  margin-top: 150px;\n  transition: margin-left 0.3s; /* Add transition effect for smooth animation */\n}\n    }\n</style>"],"mappings":";AA0IA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MAAE;MACtBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,EAAE;IAC7C,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB,CAAC;EACCC,QAAQ,EAAE;IACRC,IAAIA,CAAA,EAAG;MACL,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvD;EACF,CAAC;EACDC,OAAO,EAAE;IACPP,UAAUA,CAAA,EAAG;MACXF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCN,KAAK,CAACe,GAAG,CAAC,wCAAwC,EAAE;QAAEC,MAAM,EAAE;UAAEC,SAAS,EAAE,IAAI,CAACR,IAAI,CAACQ;QAAU;MAAE,CAAC,EAC3FC,IAAI,CAACC,QAAO,IAAK;QAChBd,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEa,QAAQ,CAAClB,IAAI,CAAC;QACzC,IAAI,CAACE,KAAI,GAAIgB,QAAQ,CAAClB,IAAI;MAC9B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;QACZhB,OAAO,CAACgB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC;IACD;IACAC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IAED;IACAC,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;IACzC,CAAC;IAED;IACAE,2BAA2BA,CAAA,EAAG;MAC5B,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;IAC/C,CAAC;IACDG,+BAA+BA,CAAA,EAAG;MAChC,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;IACnD,CAAC;IAEDI,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDK,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;IAC1C,CAAC;IAED;IACAM,aAAaA,CAAA,EAAG;MACd,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAEDO,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IAEDQ,SAASA,CAAA,EAAG;MACV,IAAI,CAAC9B,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD+B,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC/B,cAAa,GAAI,KAAK;IAC7B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}