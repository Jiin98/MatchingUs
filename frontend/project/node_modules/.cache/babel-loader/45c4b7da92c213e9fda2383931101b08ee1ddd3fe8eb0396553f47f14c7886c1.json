{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      comments: [],\n      postDetail: {},\n      content: '',\n      isCommentEmpty: false\n    };\n  },\n  created() {\n    const postID = this.$route.params.postID;\n    axios.get(`http://localhost:3001/api/getPostDetail/${postID}`).then(response => {\n      this.postDetail = response.data;\n    }).catch(error => {\n      console.error('Error fetching post details:', error);\n    });\n    axios.get(`http://localhost:3001/api/getComments/${postID}`).then(response => {\n      this.comments = response.data;\n    }).catch(error => {\n      console.error('Error fetching comments:', error);\n    });\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },\n  methods: {\n    async addComment() {\n      const postID = this.postDetail.postID;\n      const loggedInUser = JSON.parse(localStorage.getItem('user'));\n      const userID = loggedInUser.id;\n      try {\n        const response = await axios.post('http://localhost:3001/api/addComment', {\n          postID,\n          userID,\n          content: this.content // 변경된 부분\n        });\n\n        if (response.status === 201) {\n          alert('댓글이 성공적으로 추가되었습니다.');\n          this.content = ''; // 댓글 내용 초기화\n        }\n      } catch (error) {\n        console.error('댓글 추가 중 오류 발생:', error);\n        alert('댓글을 추가하는데 실패했습니다.');\n      }\n    },\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingStatusPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    }\n  }\n};","map":{"version":3,"names":["axios","data","comments","postDetail","content","isCommentEmpty","created","postID","$route","params","get","then","response","catch","error","console","computed","user","JSON","parse","localStorage","getItem","methods","addComment","loggedInUser","userID","id","post","status","alert","goToMyInfoPage","$router","push","goToLoginPage","goToMatchingApplyPage","goToMatchingStatusPage","goToMainPage","goToNoticePage"],"sources":["/Users/moonjiin/Desktop/MatchingUs/frontend/project/src/views/MatchingBoardDetailPage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 네비게이션 바 -->\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar_logo\">\n          <!-- 매칭어스 로고 이미지 -->\n          <span class=\"MatchingUs\">\n            <img  @click=\"goToMainPage\" src=\"/image/logo.png\" class=\"img\"  alt=\"매칭어스 로고\" />\n          </span>\n        </div>\n        <div class=\"navbar_right\">\n          <div class=\"navbar_welcome\">\n            <!-- 사용자 이름과 환영 메시지 -->\n            <div class=\"welcome\">환영합니다, <strong class=\"name\">{{ user.name }}</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n          </div>\n          <!-- 로그아웃 버튼 -->\n          <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\n            <i  class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\n          </button>\n        </div>\n      </div>\n    </nav>\n\n    <!-- 사이드 메뉴 바 -->\n    <nav class=\"menuBar fixed-top\">\n      <div class=\"side_nav\">\n        <ul class=\"basicMenu\">\n          <li>\n            <!-- 내 정보 페이지로 이동 버튼 -->\n            <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\n          </li>\n          <li>\n            <!-- 매칭 신청 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\n          </li>\n          <li>\n            <!-- 매칭 현황 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingStatusPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\n          </li>\n          <li>\n                    <!-- 공지사항 페이지로 이동 -->\n                    <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\n                </li>\n        </ul>\n      </div>\n    </nav>\n    </div>\n    \n    <div class=\"content\">\n  <section id=\"postDetailContainer\">\n      <div class=\"post-it\" :class=\"{ male: postDetail.gender === 'male', female: postDetail.gender === 'female' }\">\n    <h3>{{ postDetail.matchingTitle }}</h3>\n    <p>인원: {{ postDetail.matchingType }}</p>\n    <p>학과: {{ postDetail.department }}</p>\n    <p>내용: {{ postDetail.matchingContent }}</p>\n</div>\n          <div class=\"comments-section\">\n        <!-- <h4>댓글</h4> -->\n        <div class=\"comments-list\">\n          <ul class=\"comment-ul\">\n  <li v-for=\"comment in comments\" :key=\"comment.commentID\">\n    {{ comment.content }}\n  </li>\n</ul>\n        </div>\n\n        <div class=\"add-comment\">\n        <textarea class=\"textarea1\" v-model=\"content\" placeholder=\"댓글을 작성해주세요.\"></textarea>\n        <button class=\"comment-button\" @click=\"addComment\">댓글 추가</button>\n    </div>\n\n        <p class=\"warning-text\" v-if=\"isCommentEmpty\">추가할 내용이 없습니다.</p>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n  return {\n    comments: [],\n    postDetail: {},\n    content: '',\n    isCommentEmpty: false\n  };\n},\ncreated() {\n    const postID = this.$route.params.postID;\n    axios.get(`http://localhost:3001/api/getPostDetail/${postID}`)\n    .then(response => {\n        this.postDetail = response.data;\n    })\n    .catch(error => {\n        console.error('Error fetching post details:', error);\n    });\n    axios.get(`http://localhost:3001/api/getComments/${postID}`)\n.then(response => {\n    this.comments = response.data;\n})\n.catch(error => {\n    console.error('Error fetching comments:', error);\n});\n},\ncomputed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },  \n  methods: {\n    async addComment() {\n            const postID = this.postDetail.postID;\n            const loggedInUser = JSON.parse(localStorage.getItem('user'));\n            const userID = loggedInUser.id;\n\n            try {\n                const response = await axios.post('http://localhost:3001/api/addComment', {\n                    postID,\n                    userID,\n                    content: this.content // 변경된 부분\n                });\n\n                if (response.status === 201) {\n                    alert('댓글이 성공적으로 추가되었습니다.');\n                    this.content = ''; // 댓글 내용 초기화\n                }\n            } catch (error) {\n                console.error('댓글 추가 중 오류 발생:', error);\n                alert('댓글을 추가하는데 실패했습니다.');\n            }\n        },\n\n    \n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n\n    // 매칭 현황 페이지로 이동\n    goToMatchingStatusPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    }\n  }\n}\n</script>\n\n<style scoped>\nbody {\n    margin: 0;\n    background-color: white;\n    font-family: 'jua', sans-serif;\n}\n\n.MatchingUs {\n    font-size: 28px;\n    color: #9370DB;\n}\n\n/* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\n.img {\n    width: 200px; /* 이미지의 너비를 200px로 조정 */\n    height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\n    margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\n}\n\n\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #F6E6F6;\n    padding: 8px 12px;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_logo {\n    font-size: 24px;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_logo .logo_image {\n    margin-right: 8px; \n}\n\n.navbar_welcome {\n    display: flex;\n    align-items: center;\n    margin-right: 30px; \n    margin-top: 10px;\n    font-weight: 400;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_welcome .welcome {\n    color: #9370DB;\n    margin-bottom: 10px;\n    font-family: 'jua', sans-serif;\n}\n\n.card-img-top {\n    width: 300px;\n    height: 180px;\n}\n\n.btn.btn-outline-success {\n    /* color: #9370DB; */\n    border-color: #9370DB; \n    font-weight: 500;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_right {\n    display: flex;\n    align-items: center;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_right .btn {\n    margin-left: auto;\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n/* Set the border color to match the text color */\nfont-family: 'jua', sans-serif;\n}\n\n.navbar_right .btn a {\n/* Set the text color of the button */\n    text-decoration: none;\n    font-family: 'jua', sans-serif;\n}\n\n.navbar_right .btn:hover {\n    transform: scale(1.05);\n}\n\n\n\n/* 사이드 메뉴 바 */\n.side_nav {\n    width: 200px;\n    height: 100%;\n    position: fixed;\n    background-color:#cccccc; /* 회색으로 변경 */\n    padding: 20px;\n    font-family: 'jua', sans-serif;\n}\n\n.basicMenu button:hover {\n    background-color:#AAAAAA; /* 호버시 진한 회색으로 변경 */\n    font-family: 'jua', sans-serif;\n}\n\n.basicMenu {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    font-family: 'jua', sans-serif;\n}\n\n.basicMenu button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n    text-align: left;\n    color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n    font-size: 16px;\n    transition: background-color 0.3s; /* 호버 효과 추가 */\n    font-family: 'jua', sans-serif;\n}\n\n\n.menuBar {\n  top: 95px; /* Adjust this value according to your fixed navbar height */\n  font-family: 'jua', sans-serif;\n}\n\n.container {\n display: flex;\n    justify-content: center;\n    align-items: center;\n  font-family: 'jua', sans-serif;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  margin-right: 150px;\n  margin-left: 350px;\n  margin-top: 150px;\n}\n\n/* 상세 정보 스타일 */\n\n.post-it.male {\n  background-color: #deeeff; /* Blue color for male */\n  font-family: 'gangwon', sans-serif;\n}\n\n.post-it.female {\n  background-color: #ffe4ee; /* Pink color for female */\n  font-family: 'gangwon', sans-serif;\n\n}\n.post-it {\n  width: 1000px;\n  height: 500px;\n  margin: 10px;\n  padding: 10px;\n\n\n  box-shadow: 2px 2px 5px #aaa;\n  background-color: #fefabc; /* Default yellow color for post-it */\n  transition: transform 0.2s; /* Animation for hover effect */\n  font-size: 25px;\n}\n\n\n\n/* 댓글 섹션 스타일 */\n\n.comment-ul {\n  list-style: none;\n  margin: none;\n  padding: 10px;\n}\n\n.comment-ul li {\n  margin-bottom: 10px; /* 댓글 간격을 조정 */\n  \n}\n\n.comment-button {\n  width: 70px;\n  \n}\n\n.comments-section {\n  width: 1000px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n  margin: 10px;\n  margin-top: 30px;\n  padding: 10px;\n  \n}\n\n\n.add-comment {\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  \n}\n\n.textarea-wrapper {\n  position: relative;\n  \n}\n\n.add-comment textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  resize: vertical;\n  border: 1px solid #F6E6F6;\n}\n\n.add-comment textarea:focus {\n  border: 1px solid #F6E6F6;/* 클릭시에 변경할 border 색상 설정 */\n}\n\n.add-comment button {\n  width: auto; /* Button width takes up available space */\n  background-color: #F6E6F6;\n  color: #9370DB;\n  border: 1px solid #9370DB;\n  padding: 7px;\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n  align-self: flex-end;\n}\n\n.add-comment button:hover {\n  background-color: #9370DB;\n  color: white;\n}\n\n.warning-text {\n  color: red;\n  font-size: 15px;\n  margin-top: 10px;\n  font-weight: bold;\n}\n/* 반응형 레이아웃 (사이드바가 사라지는 화면 크기 이하) */\n@media (max-width: 768px) { /* 예시: 768px 이하의 화면 크기에서 적용 */\n    .content {\n        margin-left: 20px; /* 사이드바가 사라지면 좌측 마진을 줄임 */\n    }\n    \n    .side_nav {\n        display: none; /* 사이드바를 숨김 */\n    }\n}\n\n@font-face {\n  font-family: 'gangwon';\n  src:url(../../public/fonts/강원교육현옥샘.ttf)\n}\n\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n</style>"],"mappings":";AA+EA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;IACxCP,KAAK,CAACU,GAAG,CAAE,2CAA0CH,MAAO,EAAC,EAC5DI,IAAI,CAACC,QAAO,IAAK;MACd,IAAI,CAACT,UAAS,GAAIS,QAAQ,CAACX,IAAI;IACnC,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;IACFd,KAAK,CAACU,GAAG,CAAE,yCAAwCH,MAAO,EAAC,EAC9DI,IAAI,CAACC,QAAO,IAAK;MACd,IAAI,CAACV,QAAO,GAAIU,QAAQ,CAACX,IAAI;IACjC,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACF,CAAC;EACDE,QAAQ,EAAE;IACNC,IAAIA,CAAA,EAAG;MACL,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvD;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACX,MAAMhB,MAAK,GAAI,IAAI,CAACJ,UAAU,CAACI,MAAM;MACrC,MAAMiB,YAAW,GAAIN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC7D,MAAMI,MAAK,GAAID,YAAY,CAACE,EAAE;MAE9B,IAAI;QACA,MAAMd,QAAO,GAAI,MAAMZ,KAAK,CAAC2B,IAAI,CAAC,sCAAsC,EAAE;UACtEpB,MAAM;UACNkB,MAAM;UACNrB,OAAO,EAAE,IAAI,CAACA,OAAM,CAAE;QAC1B,CAAC,CAAC;;QAEF,IAAIQ,QAAQ,CAACgB,MAAK,KAAM,GAAG,EAAE;UACzBC,KAAK,CAAC,oBAAoB,CAAC;UAC3B,IAAI,CAACzB,OAAM,GAAI,EAAE,EAAE;QACvB;MACJ,EAAE,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCe,KAAK,CAAC,mBAAmB,CAAC;MAC9B;IACJ,CAAC;IAGL;IACAC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IAEDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAED;IACAE,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;IACzC,CAAC;IAED;IACAG,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;IAC/C,CAAC;IAEDI,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDK,cAAcA,CAAA,EAAG;MACf,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}