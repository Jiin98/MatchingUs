{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-332073f6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"navbar bg-body-tertiary fixed-top\"\n};\nconst _hoisted_2 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"navbar_logo\"\n};\nconst _hoisted_4 = {\n  class: \"MatchingUs\"\n};\nconst _hoisted_5 = {\n  class: \"navbar_right\"\n};\nconst _hoisted_6 = {\n  class: \"navbar_welcome\"\n};\nconst _hoisted_7 = {\n  class: \"welcome\"\n};\nconst _hoisted_8 = {\n  class: \"name\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-regular fa-face-smile\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-right-from-bracket\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"menuBar fixed-top\"\n};\nconst _hoisted_12 = {\n  class: \"side_nav\"\n};\nconst _hoisted_13 = {\n  class: \"basicMenu\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"text-decoration\": \"none\",\n    \"color\": \"white\"\n  }\n}, \"내 정보\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_14];\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"text-decoration\": \"none\",\n    \"color\": \"white\"\n  }\n}, \"매칭 신청\", -1 /* HOISTED */));\nconst _hoisted_17 = [_hoisted_16];\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"text-decoration\": \"none\",\n    \"color\": \"white\"\n  }\n}, \"매칭 현황\", -1 /* HOISTED */));\nconst _hoisted_19 = [_hoisted_18];\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"text-decoration\": \"none\",\n    \"color\": \"white\"\n  }\n}, \"공지사항\", -1 /* HOISTED */));\nconst _hoisted_21 = [_hoisted_20];\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"match-status\"\n}, [/*#__PURE__*/_createCommentVNode(\" 매칭 현황의 내용이 동적으로 표시될 영역 \")], -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"content-container\"\n};\nconst _hoisted_24 = {\n  class: \"content matching-form\"\n};\nconst _hoisted_25 = {\n  ref: \"myForm\"\n};\nconst _hoisted_26 = {\n  class: \"form-group\"\n};\nconst _hoisted_27 = {\n  class: \"radio-container\"\n};\nconst _hoisted_28 = {\n  class: \"radio-label\"\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bold-purple\"\n}, \"1-2인 매칭\", -1 /* HOISTED */));\nconst _hoisted_30 = {\n  class: \"radio-label\"\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bold-purple\"\n}, \"3인 이상 매칭\", -1 /* HOISTED */));\nconst _hoisted_32 = {\n  class: \"form-group\"\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"matchingTitle\",\n  class: \"bold-purple\"\n}, \"매칭 제목\", -1 /* HOISTED */));\nconst _hoisted_34 = [\"disabled\"];\nconst _hoisted_35 = {\n  class: \"form-group\"\n};\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"matchingContent\",\n  class: \"matching-label\"\n}, \"매칭 내용\", -1 /* HOISTED */));\nconst _hoisted_37 = [\"disabled\"];\nconst _hoisted_38 = {\n  class: \"btn-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createCommentVNode(\" 네비게이션 바 \"), _createCommentVNode(\" 상단 고정 네비게이션 바 \"), _createElementVNode(\"nav\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 매칭어스 로고 이미지 \"), _createElementVNode(\"span\", _hoisted_4, [_createElementVNode(\"img\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToMainPage && $options.goToMainPage(...args)),\n    src: \"/image/logo.png\",\n    class: \"img\",\n    alt: \"매칭어스 로고\"\n  })])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 사용자 이름과 환영 메시지 \"), _createElementVNode(\"div\", _hoisted_7, [_createTextVNode(\"환영합니다, \"), _createElementVNode(\"strong\", _hoisted_8, _toDisplayString($options.user.name), 1 /* TEXT */), _createTextVNode(\"님! \"), _hoisted_9])]), _createCommentVNode(\" 로그아웃 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToLoginPage && $options.goToLoginPage(...args)),\n    class: \"btn btn-outline-success\",\n    style: {\n      \"color\": \"#9370DB\",\n      \"text-decoration\": \"none\"\n    }\n  }, [_hoisted_10, _createTextVNode(\" LOG OUT! \")])])])]), _createCommentVNode(\" 사이드 메뉴 바 \"), _createCommentVNode(\" 좌측 고정 사이드 메뉴 바 \"), _createElementVNode(\"nav\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"ul\", _hoisted_13, [_createElementVNode(\"li\", null, [_createCommentVNode(\" 내 정보 페이지로 이동 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToMyInfoPage && $options.goToMyInfoPage(...args))\n  }, _hoisted_15)]), _createElementVNode(\"li\", null, [_createCommentVNode(\" 매칭 신청 페이지로 이동 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goToMatchingApplyPage && $options.goToMatchingApplyPage(...args))\n  }, _hoisted_17)]), _createElementVNode(\"li\", null, [_createCommentVNode(\" 매칭 현황 페이지로 이동 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.goToMatchingApplyDetailPage && $options.goToMatchingApplyDetailPage(...args))\n  }, _hoisted_19)]), _createElementVNode(\"li\", null, [_createCommentVNode(\" 공지사항 페이지로 이동 \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.goToNoticePage && $options.goToNoticePage(...args))\n  }, _hoisted_21)])])])]), _createCommentVNode(\" 매칭 현황 \"), _hoisted_22]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"form\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createCommentVNode(\" 문제점 1: 1-2인 매칭, 3인 이상 텍스트 스타일 변경 \"), _createElementVNode(\"label\", _hoisted_28, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"matching-type-1\",\n    name: \"matchingType\",\n    value: \"1-2인 매칭\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.post.matchingType = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, _ctx.post.matchingType]]), _hoisted_29]), _createElementVNode(\"label\", _hoisted_30, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"matching-type-2\",\n    name: \"matchingType\",\n    value: \"3인 이상 매칭\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.post.matchingType = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, _ctx.post.matchingType]]), _hoisted_31])])])], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_32, [_createCommentVNode(\" 문제점 2: 매칭 제목 아래에 textbox 추가 및 위치 조정 \"), _hoisted_33, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"matchingTitle\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.post.matchingTitle = $event),\n    required: \"\",\n    disabled: !$data.editMode\n  }, null, 8 /* PROPS */, _hoisted_34), [[_vModelText, _ctx.post.matchingTitle]])]), _createElementVNode(\"div\", _hoisted_35, [_createCommentVNode(\" 문제점 2: 매칭 내용 아래에 textbox 추가 및 위치 조정 \"), _hoisted_36, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"matchingContent\",\n    rows: \"8\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.post.matchingContent = $event),\n    required: \"\",\n    disabled: !$data.editMode\n  }, null, 8 /* PROPS */, _hoisted_37), [[_vModelText, _ctx.post.matchingContent]])]), _createElementVNode(\"div\", _hoisted_38, [$data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    class: \"edit-btn edit-btn-purple\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.updateUserInformation && $options.updateUserInformation(...args))\n  }, \" 저장 \")) : _createCommentVNode(\"v-if\", true), $data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    type: \"button\",\n    class: \"edit-btn edit-btn-purple\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.cancelChanges && $options.cancelChanges(...args))\n  }, \" 취소 \")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    type: \"button\",\n    class: \"edit-btn edit-btn-purple\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.enableEditMode && $options.enableEditMode(...args))\n  }, \" 수정 \"))]), _createElementVNode(\"p\", {\n    class: \"result-message\",\n    style: _normalizeStyle({\n      color: $data.resultMessageColor\n    })\n  }, _toDisplayString($data.resultMessage), 5 /* TEXT, STYLE */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_hoisted_14","_hoisted_16","_hoisted_18","_hoisted_20","_createCommentVNode","ref","for","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","goToMainPage","src","alt","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","user","name","_hoisted_9","goToLoginPage","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","goToMyInfoPage","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToNoticePage","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","type","id","value","_ctx","post","matchingType","$event","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","matchingTitle","required","disabled","$data","editMode","_hoisted_35","_hoisted_36","rows","matchingContent","_hoisted_38","_createElementBlock","updateUserInformation","cancelChanges","enableEditMode","_normalizeStyle","color","resultMessageColor","resultMessage"],"sources":["/Users/moonjiin/Desktop/MatchingUs/frontend/project/src/views/MatchingChangePage.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- 네비게이션 바 -->\n      <!-- 상단 고정 네비게이션 바 -->\n      <nav class=\"navbar bg-body-tertiary fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar_logo\">\n            <!-- 매칭어스 로고 이미지 -->\n            <span class=\"MatchingUs\">\n              <img @click=\"goToMainPage\"\n                src=\"/image/logo.png\"\n                class=\"img\"\n                alt=\"매칭어스 로고\"\n              />\n            </span>\n          </div>\n          <div class=\"navbar_right\">\n            <div class=\"navbar_welcome\">\n              <!-- 사용자 이름과 환영 메시지 -->\n              <div class=\"welcome\">환영합니다, <strong class=\"name\">{{ user.name }}</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n            </div>\n            <!-- 로그아웃 버튼 -->\n            <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\n              <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\n            </button>\n          </div>\n        </div>\n      </nav>\n  \n      <!-- 사이드 메뉴 바 -->\n      <!-- 좌측 고정 사이드 메뉴 바 -->\n      <nav class=\"menuBar fixed-top\">\n        <div class=\"side_nav\">\n          <ul class=\"basicMenu\">\n            <li>\n              <!-- 내 정보 페이지로 이동 버튼 -->\n              <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\n            </li>\n            <li>\n              <!-- 매칭 신청 페이지로 이동 버튼 -->\n              <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\n            </li>\n            <li>\n              <!-- 매칭 현황 페이지로 이동 버튼 -->\n              <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\n            </li>\n            <li>\n              <!-- 공지사항 페이지로 이동 -->\n              <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      <!-- 매칭 현황 -->\n      <div class=\"match-status\">\n        <!-- 매칭 현황의 내용이 동적으로 표시될 영역 -->\n      </div>\n    </div>\n  \n  \n    <div class=\"content-container\">\n        <div class=\"content matching-form\">\n          <form ref=\"myForm\">\n            <div class=\"form-group\">\n              <div class=\"radio-container\">\n                <!-- 문제점 1: 1-2인 매칭, 3인 이상 텍스트 스타일 변경 -->\n                <label class=\"radio-label\">\n                  <input type=\"radio\" id=\"matching-type-1\" name=\"matchingType\" value=\"1-2인 매칭\" v-model=\"post.matchingType\">\n                  <span class=\"bold-purple\">1-2인 매칭</span>\n                </label>\n                <label class=\"radio-label\">\n                  <input type=\"radio\" id=\"matching-type-2\" name=\"matchingType\" value=\"3인 이상 매칭\" v-model=\"post.matchingType\">\n                  <span class=\"bold-purple\">3인 이상 매칭</span>\n                </label>\n              </div>\n            </div>\n        </form>\n  \n            <div class=\"form-group\">\n              <!-- 문제점 2: 매칭 제목 아래에 textbox 추가 및 위치 조정 -->\n              <label for=\"matchingTitle\" class=\"bold-purple\">매칭 제목</label>\n              <input type=\"text\" id=\"matchingTitle\" v-model=\"post.matchingTitle\" required :disabled=\"!editMode\">\n            </div>\n  \n            <div class=\"form-group\">\n              <!-- 문제점 2: 매칭 내용 아래에 textbox 추가 및 위치 조정 -->\n              <label for=\"matchingContent\" class=\"matching-label\">매칭 내용</label>\n              <textarea id=\"matchingContent\" rows=\"8\" v-model=\"post.matchingContent\" required :disabled=\"!editMode\"></textarea>\n            </div>\n  \n            <div class=\"btn-container\">\n  <button v-if=\"editMode\" type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"updateUserInformation\">\n    저장\n  </button>\n  <button v-if=\"editMode\" type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"cancelChanges\">\n    취소\n  </button>\n  <button v-else type=\"button\" class=\"edit-btn edit-btn-purple\" @click=\"enableEditMode\">\n    수정\n  </button>\n</div>\n<p class=\"result-message\" :style=\"{ color: resultMessageColor }\">{{ resultMessage }}</p>\n\n\n          </div>\n        </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      editMode: false, // Set to false initially\n      matchingType: '',\n      matchingTitle: '',\n      matchingContent: '',\n      resultMessage: '',\n      resultMessageColor: '',\n      postDetail: {},\n      // ... (other data properties)\n    };\n  },\n  created() {\n    const postID = this.$route.params.postID;\n    console.log(postID);\n    axios.get(`http://localhost:3001/api/getPostDetail/${postID}`)\n    .then(response => {\n        this.postDetail = response.data;\n    })\n    .catch(error => {\n        console.error('Error fetching post details:', error);\n    });\n},\n  computed: {\n      user() {\n        return JSON.parse(localStorage.getItem('user')) || {};\n      }\n    },  \n    methods: {\n    enableEditMode() {\n      this.editMode = true; // Activate edit mode\n    },\n    updateUserInformation() {\n      // ... (your update method)\n    },\n    cancelChanges() {\n      this.editMode = false; // Deactivate edit mode\n      // ... (other cancel logic)\n    },\n      async applyMatching() {\n        // 모든 필드가 채워져 있는지 확인\n        if (\n            this.matchingType !== '' &&\n            this.matchingTitle.trim() !== '' &&\n            this.matchingContent.trim() !== ''\n        ) {\n            \n  const user = JSON.parse(localStorage.getItem('user'));\n  const userID = user ? user.id : null;\n  \n  const postData = {\n                matchingType: this.matchingType,\n                matchingTitle: this.matchingTitle,\n                matchingContent: this.matchingContent,\n                userID: userID  // You might also need to send the userID\n            };\n  \n            // Send the post data to the server\n            try {\n              const response = await fetch(\"http://localhost:3001/api/addPost\", {\n                method: 'POST',\n                headers: { \n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postData)\n            });\n            \n            if (response.ok) {\n              const data = await response.json();\n              alert(data.message);\n              this.resultMessage = '신청되었습니다!';\n              this.resultMessageColor = 'green';\n              this.$refs.myForm.reset();\n              } else {\n                const errorData = await response.json();\n                alert(errorData.error);\n                this.resultMessage = '매칭 신청에 실패했습니다.';\n                this.resultMessageColor = 'red';\n                }\n            } catch (error){\n              console.error(\"오류\", error);\n            }\n        }\n      },\n  \n      cancelMatching() {\n        // 폼 필드를 지우고 결과 메시지 초기화\n        this.matchingType = '';\n        this.matchingTitle = '';\n        this.matchingContent = '';\n        this.resultMessage = '';\n        this.resultMessageColor = ''; // 색상 재설정\n      },\n  \n      // 내 정보 페이지로 이동\n      goToMyInfoPage() {\n        this.$router.push(\"/MyInfoPage\");\n      },\n  \n      // 매칭 신청 페이지로 이동\n      goToMatchingApplyPage() {\n        this.$router.push(\"/MatchingApplyPage\");\n      },\n  \n      // 매칭 현황 페이지로 이동\n      goToMatchingApplyDetailPage() {\n        this.$router.push(\"/MatchingApplyDetailPage\");\n      },\n  \n      // 로그인 페이지로 이동\n      goToLoginPage() {\n        this.$router.push(\"/\");\n      },\n  \n      goToMainPage() {\n        this.$router.push(\"/MainPage\");\n      },\n  \n      goToNoticePage() {\n        this.$router.push(\"/NoticePage\");\n      },\n    }\n  }\n  </script>\n  \n  <style scoped>\n  body {\n      margin: 0;\n      background-color: white;\n      font-family: 'jua', sans-serif;\n  }\n  \n  #matchingContent {\n    font-family: 'jua', sans-serif;\n  }\n  .MatchingUs {\n      font-size: 28px;\n      color: #9370DB;\n      font-family: 'jua', sans-serif;\n  }\n  \n  /* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\n  .img {\n      width: 200px; /* 이미지의 너비를 200px로 조정 */\n      height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\n      margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\n  }\n  \n  \n  .navbar {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background-color: #F6E6F6;\n      padding: 8px 12px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_logo {\n      font-size: 24px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_logo .logo_image {\n      margin-right: 8px; \n  }\n  \n  .navbar_welcome {\n      display: flex;\n      align-items: center;\n      margin-right: 30px; \n      margin-top: 10px;\n      font-weight: 400;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_welcome .welcome {\n      color: #9370DB;\n      margin-bottom: 10px;\n  }\n  \n  .btn.btn-outline-success {\n      /* color: #9370DB; */\n      border-color: #9370DB; \n      font-weight: 500;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .navbar_right {\n      display: flex;\n      align-items: center;\n  }\n  \n  .navbar_right .btn {\n      margin-left: auto;\n      background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n  /* Set the border color to match the text color */\n  }\n  \n  .navbar_right .btn a {\n  /* Set the text color of the button */\n      text-decoration: none;\n  }\n  \n  .navbar_right .btn:hover {\n      transform: scale(1.05);\n  }\n  \n  /* 사이드 메뉴 바 */\n  .side_nav {\n      width: 200px;\n      height: 100%;\n      position: fixed;\n      background-color:#cccccc; /* 회색으로 변경 */\n      padding: 20px;\n      font-family: 'jua', sans-serif;\n  }\n  \n  .basicMenu button:hover {\n      background-color:#AAAAAA; /* 호버시 진한 회색으로 변경 */\n      font-family: 'jua', sans-serif;\n  }\n  \n  \n  .basicMenu {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n  }\n  \n  .basicMenu button {\n      background: none;\n      border: none;\n      cursor: pointer;\n      padding: 10px;\n      margin-bottom: 10px;\n      width: 100%;\n      text-align: left;\n      color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n      font-size: 16px;\n      transition: background-color 0.3s; /* 호버 효과 추가 */\n  }\n  \n  \n  .menuBar {\n    top: 95px; /* Adjust this value according to your fixed navbar height */\n  }\n  \n  .container {\n    display: flex;\n    justify-content: center;\n  }\n  \n  .content {\n    padding: 30px;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: #fff;\n    width: 500px;\n    margin-left:350px;\n    margin-right: 150px;\n  }\n  \n  .section-title {\n    color: #9370DB;\n    margin-bottom: 20px;\n    font-size: 24px;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .bold-purple {\n    /* 문제점 1: 보라색 굵은 글씨 스타일 */\n    color: #9370db;\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .matching-form {\n    width: 100%;\n    max-width: 600px;\n    margin: 3px auto; /* 폼을 더 아래로 내림 */\n    padding: 20px;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .radio-container {\n    display: flex;\n    align-items: center;\n  }\n  \n  .radio-label {\n    margin-right: 20px;\n  }\n  \n  .matching-label {\n    /* 문제점 2: 매칭 내용 레이블 위치 조정 */\n    float: left;\n    margin-right: 10px;\n    color: #9370db;\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  \n  .btn-container {\n    /* 수정된 스타일 */\n    display: flex;\n    justify-content: flex-end; /* 오른쪽 정렬 */\n    align-items: center;\n    margin-top: 20px;\n  }\n  \n  .apply-btn,\n  .cancel-btn {\n    background-color: #F6E6F6;\n    color: #9370DB;\n    border: 1px solid #9370DB;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    font-family: 'jua', sans-serif;\n  }\n  \n  \n  .result-message {\n    margin-top: 10px;\n    color: #008000; /* Green color for successful message */\n    font-weight: bold;\n    font-family: 'jua', sans-serif;\n  }\n  \n  .content-container {\n    display: flex;\n    justify-content: center; /* 수평으로 가운데 정렬 */\n    margin-left: 350px;\n    margin-right: 150px;\n    align-items: flex-start;\n    margin-top: 100px;\n  }\n  \n  textarea {\n    /* 문제점 3: 텍스트 박스 크기 조정 */\n    width: 100%;\n    resize: vertical;\n    border-radius: 10px;\n    border: 1px solid #DDD;\n  }\n  \n  #matchingTitle {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #DDD;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-bottom: 15px;\n    transition: border-color 0.3s;\n    font-family: 'jua', sans-serif;\n  }\n\n  \n  input[type=\"text\"],\n  textarea {\n    /* 문제점 3: 텍스트 박스 크기 조정 */\n    width: 100%;\n    resize: vertical;\n    margin-top: 5px; /* 추가된 코드: 텍스트박스 위 여백 */\n  }\n  \n  .edit-btn-purple {\n    background-color: #F6E6F6;\n  color: #9370DB;\n  border: 1px solid #9370DB;\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-family: 'jua', sans-serif;\n}\n\n  \n  @import \"~bootstrap/dist/css/bootstrap.min.css\";\n  @import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n  \n  @font-face {\n    font-family: 'jua';\n    src:url(../../public/fonts/font.ttf)\n  }\n  \n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}